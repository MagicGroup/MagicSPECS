--- test/test_helper.rb.orig	2015-03-16 14:02:14.804397806 -0400
+++ test/test_helper.rb	2015-03-16 14:33:19.995901982 -0400
@@ -4,8 +4,8 @@ test_dir = File.dirname(__FILE__)
 $:.unshift(test_dir) unless $:.include?(test_dir)
 
 require 'compass'
-require 'test/unit'
-require 'true'
+require 'minitest/autorun'
+require 'mocha/mini_test'
 
 
 class String
@@ -43,6 +42,7 @@ module SpriteHelper
   end
   
   def sprite_map_test(options, uri = URI)
+    Compass.configuration.add_to_sprite_load_path @images_tmp_path
     importer = Compass::SpriteImporter.new
     path, name = Compass::SpriteImporter.path_and_name(uri)
     sprite_names = Compass::SpriteImporter.sprite_names(uri)
--- test/integrations/sprites_test.rb.orig	2015-03-16 13:59:15.282312814 -0400
+++ test/integrations/sprites_test.rb	2015-03-16 13:59:50.632935719 -0400
@@ -103,7 +103,7 @@ class SpritesTest < Test::Unit::TestCase
       @import "squares/*.png";
       @include all-squares-sprites;
     SCSS
-    assert_not_nil Dir.glob("#{@generated_images_tmp_path}/squares-s*.png").first
+    refute_nil Dir.glob("#{@generated_images_tmp_path}/squares-s*.png").first
     assert_correct <<-CSS, css
       .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
         background-image: url('/images/generated/squares-sbbc18e2129.png');
@@ -442,7 +442,7 @@ class SpritesTest < Test::Unit::TestCase
   end
 
   it "should provide a nice errors for lemonade's old users" do
-    assert_raise(Sass::SyntaxError) do
+    assert_raises(Sass::SyntaxError) do
       render <<-SCSS
         .squares {
           background-image: sprite-url("squares/*.png");
@@ -451,7 +451,7 @@ class SpritesTest < Test::Unit::TestCase
       SCSS
     end
     
-    assert_raise(Sass::SyntaxError) do
+    assert_raises(Sass::SyntaxError) do
       css = render <<-SCSS
         @import "squares/*.png";
 
--- test/units/sprites/image_test.rb.orig	2015-03-16 14:36:20.875220305 -0400
+++ test/units/sprites/image_test.rb	2015-03-16 14:36:24.244188982 -0400
@@ -29,6 +29,7 @@ class SpritesImageTest < Test::Unit::Tes
   
   def test_map(options ={})
     options = {'cleanup' => Sass::Script::Bool.new(true), 'layout' => Sass::Script::String.new('vertical')}.merge(options)
+    options.extend(Compass::SassExtensions::Functions::Sprites::VariableReader)
     map = sprite_map_test(options)
   end
   
@@ -69,7 +70,7 @@ class SpritesImageTest < Test::Unit::Tes
   end
   
   test 'image type is "global" should raise exception' do
-    assert_raise ::Compass::SpriteException do
+    assert_raises ::Compass::SpriteException do
       image = test_image "selectors_ten_by_ten_repeat" => Sass::Script::String.new('global')
       image.repeat
     end
--- test/units/sass_extensions_test.rb.orig	2015-03-16 14:39:00.617735141 -0400
+++ test/units/sass_extensions_test.rb	2015-03-16 14:39:04.405699923 -0400
@@ -149,22 +149,33 @@ WARNING
     assert_equal "url(/font/with/right_ext.woff) format('woff'), url(/font/with/right_ext_also.otf) format('opentype')", evaluate("font_files('/font/with/right_ext.woff', '/font/with/right_ext_also.otf')")
     assert_equal "url(/font/with/wrong_ext.woff) format('truetype'), url(/font/with/right_ext.otf) format('opentype')", evaluate("font_files('/font/with/wrong_ext.woff', 'ttf', '/font/with/right_ext.otf')")
 
-    assert_nothing_raised Sass::SyntaxError do
+    nothing_raised = true
+    begin
       evaluate("font-files('/font/name.woff')")
+    rescue
+      nothing_raised = false
     end
 
-    assert_nothing_raised Sass::SyntaxError do
+    begin
       evaluate("font-files('/font/name.svg#fontId')")
+    rescue
+      nothing_raised = false
     end
 
-    assert_nothing_raised Sass::SyntaxError do
+    begin
       evaluate("font-files('/font/name.eot?#iefix')")
+    rescue
+      nothing_raised = false
     end
 
-    assert_nothing_raised Sass::SyntaxError do
+    begin
       evaluate("font-files('/font/name.svg?mightbedynamic=something%20+escaped#fontId')")
+    rescue
+      nothing_raised = false
     end
 
+    assert nothing_raised
+
     assert_raises Sass::SyntaxError do
       evaluate("font-files('/font/name.ext')")
     end
