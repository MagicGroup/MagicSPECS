diff --git a/tests/all.sh b/tests/all.sh
--- a/tests/all.sh
+++ b/tests/all.sh
@@ -296,17 +296,17 @@ fi
 
 # NOTE:
 # Since in make at the top level, modutil is the last file
 # created, we check for modutil to know whether the build
 # is complete. If a new file is created after that, the 
 # following test for modutil should check for that instead.
 # Exception: when building softoken only, shlibsign is the
 # last file created.
-if [ ${NSS_BUILD_SOFTOKEN_ONLY} -eq "1" ]; then
+if [ ${NSS_BUILD_SOFTOKEN_ONLY} = "1" ]; then
   LAST_FILE_BUILT=shlibsign
 else
   LAST_FILE_BUILT=modutil
 fi
 
 if [ ! -f ${DIST}/${OBJDIR}/bin/${LAST_FILE_BUILT}${PROG_SUFFIX} ]; then
     echo "Build Incomplete. Aborting test." >> ${LOGFILE}
     html_head "Testing Initialization"
diff --git a/tests/cipher/cipher.sh b/tests/cipher/cipher.sh
--- a/tests/cipher/cipher.sh
+++ b/tests/cipher/cipher.sh
@@ -119,17 +119,17 @@ cipher_cleanup()
 }
 
 ################## main #################################################
 
 # When building without softoken, bltest isn't built. It was already
 # built and the cipher suite run as part of an nss-softoken build. 
 if [ ! -x ${DIST}/${OBJDIR}/bin/bltest${PROG_SUFFIX} ]; then
     echo "bltest not built, skipping this test." >> ${LOGFILE}
-    res = 0
+    res=0
     html_msg $res $EXP_RET "$TESTNAME"
     return 0
 fi
 cipher_init
 # Skip cipher_main if this an NSS without softoken build.
 if [ "${NSS_BUILD_WITHOUT_SOFTOKEN}" != "1" ]; then
     cipher_main
 fi
diff --git a/tests/common/init.sh b/tests/common/init.sh
--- a/tests/common/init.sh
+++ b/tests/common/init.sh
@@ -220,17 +220,17 @@ if [ -z "${INIT_SOURCED}" -o "${INIT_SOU
     {
 	
         html "<TABLE BORDER=1 ${TABLE_ARGS}><TR><TH COLSPAN=3>$*</TH></TR>"
         html "<TR><TH width=500>Test Case</TH><TH width=50>Result</TH></TR>" 
         echo "$SCRIPTNAME: $* ==============================="
     }
     html_msg()
     {
-        if [ "$1" -ne "$2" ] ; then
+        if [ $1 -ne $2 ] ; then
             html_failed "$3" "$4"
         else
             html_passed "$3" "$4"
         fi
     }
     HTML_FAILED='</TD><TD bgcolor=red>Failed</TD><TR>'
     HTML_FAILED_CORE='</TD><TD bgcolor=red>Failed Core</TD><TR>'
     HTML_PASSED='</TD><TD bgcolor=lightGreen>Passed</TD><TR>'
diff --git a/tests/dbtests/dbtests.sh b/tests/dbtests/dbtests.sh
--- a/tests/dbtests/dbtests.sh
+++ b/tests/dbtests/dbtests.sh
@@ -170,7 +170,7 @@ dbtest_main()
 
     # skipping the next two tests when user is root,
     # otherwise they would fail due to rooty powers
-    if [ $UID -ne 0 ] then
+    if [[ $EUID -ne 0 ]]; then
       ${BINDIR}/dbtest -d $RONLY_DIR
     ret=$?
     if [ $ret -ne 46 ]; then
@@ -181,7 +181,7 @@ dbtest_main()
     else
       html_passed "Skipping Dbtest r/w in a readonly dir because user is root"
     fi
-    if [ $UID -ne 0 ] then
+    if [[ $EUID -ne 0 ]]; then
       ${BINDIR}/certutil -D -n "TestUser" -d .
     ret=$?
     if [ $ret -ne 255 ]; then
