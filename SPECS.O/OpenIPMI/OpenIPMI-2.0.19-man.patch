diff -up ./man/ipmi_cmdlang.7.manscan ./man/ipmi_cmdlang.7
--- ./man/ipmi_cmdlang.7.manscan	2013-06-05 10:21:15.742099865 +0200
+++ ./man/ipmi_cmdlang.7	2013-06-05 10:40:49.767658999 +0200
@@ -246,7 +246,7 @@ instance, the command to create a domain
 The command to list all sensors in a domain named domain1 is
 .B sensor list domain1.
 
-Each command has a reponse for each object operated on, which is
+Each command has a response for each object operated on, which is
 listed after the command description.  In those responses, anything
 that begins with a
 .B %
@@ -316,7 +316,7 @@ BMC.  For that, notice that the LAN conn
 and port for the second IP address.  OpenIPMI supports these IP
 addresses and connection, detecting failures, switching between
 addresses, and other fault-tolerant things.  It does this
-transparently to the user.  Mutiple connections may require special
+transparently to the user.  Multiple connections may require special
 OEM support, read the documentation about your specific system if you
 need this.
 
@@ -336,7 +336,7 @@ or
 \fI<name>\fP and \fI<password>\fP are the user name and password of
 the IPMI user to use for the connection.
 The <smi num> is the driver number, generally 0.
-Options enable and disable various automitic processing and are:
+Options enable and disable various automatic processing and are:
 .PD 0
 .HP
 .B -[no]all
@@ -356,7 +356,7 @@ is false by default.
 is false by default.
 .HP
 .B -[no]ipmbscan
-- IPMB bus scanning.  This turns on scanning IPMB busses when they are found.
+- IPMB bus scanning.  This turns on scanning IPMB buses when they are found.
 This is false by default.
 .HP
 .B -[no]oeminit
@@ -461,7 +461,7 @@ available hacks are:
 The -M option sets the maximum outstanding messages.  The default is
 2, ranges 1-63.
 
-Options enable and disable various automitic processing and are:
+Options enable and disable various automatic processing and are:
 .PD 0
 .HP
 .B -[no]all
@@ -519,7 +519,7 @@ Domain Created: <domain>
 .RE
 
 .B fru <domain> <is_logical> <device_address> <device_id> <lun> <private_bus> <channel>
-- dump a fru given all it's insundry information.
+- dump a fru given all it's sundry information.
 .TP
 Response:
 .RS
@@ -533,7 +533,7 @@ Domain
 
 .B msg <domain> <channel> <ipmb> <LUN> <NetFN> <Cmd> [data...]
 - Send a command to the given IPMB address on the given channel and
-display the response.  Note that this does not require the existance
+display the response.  Note that this does not require the existence
 of an MC in OpenIPMI.
 .TP
 Response:
@@ -571,7 +571,7 @@ SEL Rescan done: <domain>
 .RE
 
 .B presence <domain>
-- Audit the presence of all enities in the domain.  Note that this just
+- Audit the presence of all entities in the domain.  Note that this just
 starts the process; it will run in the background.
 .TP
 Response is:
@@ -689,7 +689,7 @@ FRU deleted: <fru>
 - Set the value of a FRU element.  The
 name is the record name, or multi-record.  The number is required
 for fields that need it (custom and multi-record).  The value is
-an a single value for integers.  For strings it is a string
+a single value for integers.  For strings it is a string
 type (either binary, ascii, or unicode) and the info.  Binary and
 unicode data is specified as numbers.  ascii data is specified in
 a string.  Note that setting a ascii value with no string will
@@ -770,7 +770,7 @@ Domain
 .B info <entity>
 - Dump information about an entity.
 .TP
-Reponse:
+Response:
 .RS
 .nf
 Entity
@@ -784,7 +784,7 @@ Entity
 .B fru <entity>
 - Dump the FRU information about the given entity.
 .TP
-Reponse:
+Response:
 .RS
 .nf
 Entity
@@ -813,7 +813,7 @@ Entity
 .B set_act_time <entity>
 - Set the hot-swap auto-activate time.
 .TP
-Reponse:
+Response:
 .RS
 .nf
 Set act time: <entity>
@@ -981,7 +981,7 @@ Response:
 .nf
 Sensor
   Name: <sensor>
-  Positivie Hysteresis: <integer>
+  Positive Hysteresis: <integer>
   Negative Hysteresis: <integer>
 .fi
 .RE
@@ -1101,7 +1101,7 @@ Set done: <control>
 .RE
 
 .B get <control>
-- Get the value of a control.  The reponse depends
+- Get the value of a control.  The response depends
 on the control type.
 .TP
 Response:
@@ -1128,7 +1128,7 @@ multiple lights.  The options values (ma
 ) will not be
 present if local control is set to true.  Local control means that
 the LED takes whatever default function it does on the device
-(like disk activity, ethernet activity, hot-swap LED, etc.).
+(like disk activity, Ethernet activity, hot-swap LED, etc.).
 Response for id control:
 .RS
 .nf
@@ -1325,7 +1325,7 @@ Channel Access
 - Set information about the MC's channel access.  There are two different
 places where this is stored, the present in-use values (volatile) and the
 non-volatile storage that is loaded at startup.  Note if you specify
-channel 0xe, the modified channel will be the current channel.  Parms
+channel 0xe, the modified channel will be the current channel.  Parameters
 are:
 .RS
 .nf
@@ -1547,7 +1547,7 @@ PET destroyed: <pet>
 .SS pef
 commands dealing with platform even filters.  These are basically
 connections to the PEF configuration parameters in an MC.  You use a
-pef to fetch a pef config, which you can then modify and write back to
+pef to fetch a pef configuration, which you can then modify and write back to
 the MC.  Note that when you get a pef config, you claim a lock on the
 MC that must be unlocked.
 
@@ -1780,7 +1780,7 @@ operational and finished all it SDR, FRU
 .fi
 .RE
 
-The following comes out when domain connection infomration changes:
+The following comes out when domain connection information changes:
 .RS
 .nf
   EVENT
diff -up ./lanserv/ipmilan.8.manscan ./lanserv/ipmilan.8
--- ./lanserv/ipmilan.8.manscan	2013-06-04 15:43:43.597127168 +0200
+++ ./lanserv/ipmilan.8	2013-06-05 13:36:31.282753184 +0200
@@ -29,18 +29,25 @@ address they came in.
 
 .SH OPTIONS
 .TP
-.BI \-c\  config-file
+\fB\-c\fR file,\ \fB\-\-config\-file\fR file
 Set the configuration file to one other than the default of
 .I "/etc/ipmi_lan.conf"
 .TP
-.B \-n
+\fB\-i\fR device,\ \fB\-\-ipmi-dev\fR device
+Sets the desired device
+.TP
+\fB\-n\fR,\ \fB\-\-daemonize\fR
 Stops  the  daemon  from  forking  and  detaching  from the controlling
 terminal. This is useful for running from init.
 .TP
-.B \-d
+\fB\-d\fR,\ \fB\-\-debug\fR
 Turns on debugging to standard output.  You generally have to use
 .B \-n
 with this.
+.TP
+\fB\-?\fR,\ \fB\-\-help\fR,\ \fB\-\-usage\fR
+Prints brief usage hints message.
+
 
 
 .SH CONFIGURATION
diff -up ./man/ipmi_ui.1.manscan ./man/ipmi_ui.1
--- ./man/ipmi_ui.1.manscan	2013-06-04 15:33:32.206892146 +0200
+++ ./man/ipmi_ui.1	2013-06-05 10:44:52.592882502 +0200
@@ -4,7 +4,7 @@
 ipmi_ui \- Crude interface to an IPMI system
 
 .SH SYNOPSIS
-.B ipmiui
+.B ipmi_ui
 .RB [\| \-dmsg \|]
 .RB [\| \-dmem \|]
 .RB [\| \-c \|]
@@ -34,7 +34,7 @@ Normally,
 starts up in a full-screen format.  The left window shows the output
 of commands, the right window shows the logs from OpenIPMI.  Both
 windows are scrollable with page up and page down keys, press the "\fBF1\fP"
-key to choose the the left window to scroll, the "\fBF2\fP" key to choose
+key to choose the left window to scroll, the "\fBF2\fP" key to choose
 the right window to scroll.
 
 Note that you must set your environment \fBTERM\fP variable properly for
@@ -48,7 +48,7 @@ the connections are to the same IPMI dom
 management controllers.  Also, each LAN connection may have two IP
 addresses.  These are two different addresses to the same management
 controller.  So you may have a total of 4 IP addresses to an IPMI
-domain, two management controllers and two IP adresses to each
+domain, two management controllers and two IP addresses to each
 management controller.
 
 .SH OPTIONS
@@ -174,12 +174,12 @@ turns events on or off from the sensor (
 turns scanning on or off for the sensor (\fB0\fP or \fB1\fP).
 .I "assertion-bitmask"
 specifies the bitmask of thresholds or states
-that should be enabled or disabled when a thrshold or state is
+that should be enabled or disabled when a threshold or state is
 asserted.  It is a bunch of 0's and 1's, where the first one is for
 threshold/state 0, the second for threshold/state 1, etc.
 .I "deassertion-bitmask"
 specifies the bitmask of thresholds or states
-that should be enabled or disabled when a thrshold or state is
+that should be enabled or disabled when a threshold or state is
 deasserted.
 
 .SH CONTROLS
diff -up ./man/openipmicmd.1.manscan ./man/openipmicmd.1
--- ./man/openipmicmd.1.manscan	2013-06-04 13:57:08.825074711 +0200
+++ ./man/openipmicmd.1	2013-06-05 10:45:54.938921332 +0200
@@ -22,7 +22,7 @@ interfaces.
 Execute a single command an exit.
 
 .TP
-.BI <connection parms>
+.BI <connection\ parms>
 The parameters for the connection depend on the connection type.
 These are all described in openipmi_conparms (7)
 
@@ -32,7 +32,7 @@ Once up, you can execute commands in the
 commands and responses are asynchronous, you issue a command and the
 interface returns immediately.  When the response comes back, it will
 be dumped on your console.  That's a little strange looking, but IPMI
-is ansychronous underneath.  Note that the \fB\-k\fP option is synchronous,
+is asynchronous underneath.  Note that the \fB\-k\fP option is synchronous,
 it will wait for the response or a timeout before returning.
 
 .TP
@@ -82,7 +82,7 @@ Remove a command registration.
 .BR openipmi_conparms (7)
 
 .SH "KNOWN PROBLEMS"
-The asychronous nature of the program can be annoying.
+The asynchronous nature of the program can be annoying.
 
 .SH AUTHOR
 .PP
diff -up ./man/openipmi_conparms.7.manscan ./man/openipmi_conparms.7
--- ./man/openipmi_conparms.7.manscan	2013-06-05 10:46:13.818932142 +0200
+++ ./man/openipmi_conparms.7	2013-06-05 10:47:48.332980969 +0200
@@ -1,7 +1,7 @@
 .TH openipmi_conparms 7 05/13/03 OpenIPMI "Connection Parameters for OpenIPMI"
 
 .SH NAME
-openipmi_cmdparms \- Connection parmeters for OpenIPMI
+openipmi_cmdparms \- Connection parameters for OpenIPMI
 
 .SH SYNOPSIS
 
@@ -97,7 +97,7 @@ use.
 .TP
 .BI \-Rc\  confidentiality\ algorithm
 The \fIRMCP+ confidentiality (encryption) algorithm\fP to use.  This keeps
-evesdroppers from seeing the data.  Valid values are: \fBbmcpick\fP,
+eavesdroppers from seeing the data.  Valid values are: \fBbmcpick\fP,
 \fBaes_cbc_128\fP, \fBxrc4_128\fP, and \fBxrc_40\fP.  The \fBbmcpick\fP option is used by
 default, which means the BMC picks the algorithm it wants to use.
 
diff -up ./man/openipmigui.1.manscan ./man/openipmigui.1
--- ./man/openipmigui.1.manscan	2013-06-05 10:48:43.389006143 +0200
+++ ./man/openipmigui.1	2013-06-05 10:51:13.372066408 +0200
@@ -38,7 +38,7 @@ Turn on message debugging, this will dum
 .TP
 .B \-\-drawmsg
 Turn on raw message debugging, this will dump all low-level messages to
-debug log output.  This differes from normal message debugging in that all
+debug log output.  This differs from normal message debugging in that all
 protocol messages are also dumped, not just IPMI messages.
 .TP
 .B \-\-dmem
@@ -81,7 +81,7 @@ tree.
 
 The tree window has a top-level list of all the domains for which
 OpenIPMI has connections (or pending connection).  Each domain
-exapands into domain-specific information and a list of entities and
+expands into domain-specific information and a list of entities and
 Management Controllers (MCs) for that domain.
 
 Right click drives most of the operations in the tree window.  Many
@@ -92,7 +92,7 @@ Color is used in the GUI to denote error
 to denote availability.  If a sensor has an error, the tree entry for
 that sensor will change colors.  Black means no error, yellow means
 warning, red means critical, and blue means non-recoverable.  These
-errors propigate up, so the entity containing that sensor will be the
+errors propagate up, so the entity containing that sensor will be the
 same color as the most critical error for the sensors underneath it.
 The same goes for domain, it will be the same color as the most
 critical error for the entities underneath it.  This way, if you watch
@@ -146,7 +146,7 @@ that sensor.
 
 .SH CONTROLS
 
-Controls are available under the entity they belong to.  control
+Controls are available under the entity they belong to.  Control
 information is beyond the scope of this document, as IPMI controls are
 very complex.  See the IPMI document from OpenIPMI for information
 about controls.
@@ -214,7 +214,7 @@ channel listing.  Note that some user se
 are global to all channels on the MC.
 
 Due to the IPMI spec and some unfortunate implementation bugs, some
-wierd issues exist with this information.  The user has an Enabled
+weird issues exist with this information.  The user has an Enabled
 value that tells whether the user is enabled or not.  When initially
 displayed, this field shows as a "?" because this field is not
 readable. It will displayed as the actual value when it is modified,
@@ -247,7 +247,7 @@ changed.
 .SH SOLPARMS
 
 In the channel display on a 8023_LAN channel, a LANPARM configuration
-command is available if the MC supporte SOL (Serial Over LAN).  This
+command is available if the MC supports SOL (Serial Over LAN).  This
 pulls up all the parameters for the LAN and allows them to be set.
 Right-clicking on an item allows it to be changed.
 
diff -up ./man/openipmish.1.manscan ./man/openipmish.1
--- ./man/openipmish.1.manscan	2013-06-05 10:52:26.787092815 +0200
+++ ./man/openipmish.1	2013-06-05 14:01:12.004559270 +0200
@@ -26,7 +26,7 @@ Turn on message debugging, this will dum
 .TP
 .B \-\-drawmsg
 Turn on raw message debugging, this will dump all low-level messages to
-debug log output.  This differes from normal message debugging in that all
+debug log output.  This differs from normal message debugging in that all
 protocol messages are also dumped, not just IPMI messages.
 .TP
 .B \-\-dmem
@@ -34,11 +34,21 @@ Turn on memory debugging, this will caus
 deallocations to be checked.  When the program terminates, it will
 dump all memory that was not properly freed (leaked).
 .TP
+.B \-\-dmsgerr
+Turn on printing out low-level message errors.
+.TP
 .B \-\-dlock
 Turn on lock debugging, this will check lock operations to make sure
 that locks are help in all the proper places and make sure that locks
 are properly nested.
 .TP
+\fB-x\fR\ <string>,\ \fB\-\-execute\fR\ <string>
+Execute the given string at startup.  This may be entered multiple times
+for multiple commands.
+.TP
+.B \-\-glib
+Use glib for the OS handler.
+.TP
 .B \-\-snmp
 Enable the SNMP trap handler.
 .B openipmish
diff -up ./man/rmcp_ping.1.manscan ./man/rmcp_ping.1
--- ./man/rmcp_ping.1.manscan	2013-06-05 10:52:59.704104189 +0200
+++ ./man/rmcp_ping.1	2013-06-05 10:53:09.788107626 +0200
@@ -38,7 +38,7 @@ starttag.  This is zero by default
 Turns on debugging to standard output.
 .TP
 .I destination
-The target address, default is the boradcast address (default 255.255.255.255)
+The target address, default is the broadcast address (default 255.255.255.255)
 
 .SH AUTHOR
 .PP
diff -up ./man/solterm.1.manscan ./man/solterm.1
--- ./man/solterm.1.manscan	2013-06-05 10:53:46.923120093 +0200
+++ ./man/solterm.1	2013-06-05 10:55:59.442162744 +0200
@@ -37,9 +37,9 @@ These are all described in openipmi_conp
 .TP
 .BI \-e\  escape_char
 The character to use to escape, or exit, the program.  Entering this
-chatacter right after a newline is entered causes the program to go
+character right after a newline is entered causes the program to go
 into command mode.  A single character after this performs a command.
-The default escape character is "~" as shown below.  Suppported
+The default escape character is "~" as shown below.  Supported
 commands are:
 .RS
 .IP ~.
@@ -98,7 +98,7 @@ the SoL session. This is the default.
 .TP
 .BI \-holdoff
 Specifies that CTS, DTR, and DSR are to be deasserted at the start of
-the SoL session so that the configuration may be modifeid before the
+the SoL session so that the configuration may be modified before the
 handshake is released.
 
 .TP
diff -up ./sample/ipmicmd.c.manscan ./sample/ipmicmd.c
--- ./sample/ipmicmd.c.manscan	2013-06-05 13:55:04.191611230 +0200
+++ ./sample/ipmicmd.c	2013-06-05 13:55:10.988610133 +0200
@@ -124,6 +124,7 @@ void usage(void)
     printf("%s [-k <command>] [-v] <con_parms>\n", progname);
     printf("Where <con_parms> is one of:");
     ipmi_parse_args_iter_help(con_usage, NULL);
+    printf("\n");
 }
 
 char *
diff -up ./sample/rmcp_ping.c.manscan ./sample/rmcp_ping.c
--- ./sample/rmcp_ping.c.manscan	2013-06-05 15:17:40.073957820 +0200
+++ ./sample/rmcp_ping.c	2013-06-05 14:21:05.778697883 +0200
@@ -156,6 +156,11 @@ main(int argc, char *argv[])
 	if (strcmp(argv[i], "--") == 0) {
 	    i++;
 	    break;
+	} else if ((strcmp(argv[i], "--help") == 0) ||
+		   (strcmp(argv[i], "-?") == 0) ||
+		   (strcmp(argv[i], "-h") == 0)) {
+	    i++;
+	    usage();
 	} else if (strcmp(argv[i], "-p") == 0) {
 	    i++;
 	    if (i >= argc) {
diff -up ./sample/solterm.c.manscan ./sample/solterm.c
--- ./sample/solterm.c.manscan	2013-06-05 15:17:55.264961190 +0200
+++ ./sample/solterm.c	2013-06-05 15:15:14.037921308 +0200
@@ -743,7 +743,12 @@ int main(int argc, char *argv[])
 
 	/* Now we make sure "lan" is the first argument so we get the
 	   right connection type... */
-	if (strcmp(argv[1], "lan") != 0) {
+	if ((strcmp(argv[1], "-h") == 0) ||
+	    (strcmp(argv[1], "--help") == 0) ||
+	    (strcmp(argv[1], "-?") == 0)) {
+		usage();
+		exit(1);
+	} else if (strcmp(argv[1], "lan") != 0) {
 		fprintf(stderr, "main: %s only supports lan connections\n",
 			progname);
 		exit(1);
diff -up ./ui/basic_ui.c.manscan ./ui/basic_ui.c
--- ./ui/basic_ui.c.manscan	2013-06-04 14:08:04.538642560 +0200
+++ ./ui/basic_ui.c	2013-06-05 11:17:41.394541158 +0200
@@ -225,6 +225,26 @@ snmp_init(selector_t *sel)
 }
 #endif /* HAVE_UCDSNMP */
     
+void help(void)
+{
+    fprintf(stdout, "ipmi_ui [ options ] smi smi-num\n");
+    fprintf(stdout, "ipmi_ui [ oprions ] lan IP port [IP2 port2] auth priv user pass\n");
+    fprintf(stdout, "\n");
+    fprintf(stdout, "Options:\n");
+    fprintf(stdout, "    -c       Command line mode\n");
+    fprintf(stdout, "    -dlock   Lock debugging ON\n");
+    fprintf(stdout, "    -dmem    Memory debugging ON\n");
+    fprintf(stdout, "    -drawmsg Raw message ON\n");
+    fprintf(stdout, "    -dmsg    Dump all messages.\n");
+#ifdef HAVE_UCDSNMP
+    fprintf(stdout, "    -snmp    SNMP trap handler ON\n");
+#endif
+    fprintf(stdout, "Auth:\n");
+    fprintf(stdout, "    none | straight | md5 | md2\n");
+    fprintf(stdout, "Priv:\n");
+    fprintf(stdout, "    callback | user | operator | admin\n");
+}
+
 int
 main(int argc, char *argv[])
 {
@@ -249,6 +269,11 @@ main(int argc, char *argv[])
 	curr_arg++;
 	if (strcmp(arg, "--") == 0) {
 	    break;
+	} else if (strcmp(arg, "-?") == 0 ||
+		   strcmp(arg, "-h") == 0 ||
+		   strcmp(arg, "--help") == 0) {
+	   help();
+	   return(1);
 	} else if (strcmp(arg, "-c") == 0) {
 	    full_screen = 0;
 	} else if (strcmp(arg, "-dlock") == 0) {
