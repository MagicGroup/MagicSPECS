/*
by lucida lucida@users.sf.net
*/
--- kdevelop.orig/parts/doctreeview/chm/chm.cpp.orig	2004-07-11 16:02:16.385008440 +0800
+++ kdevelop.orig/parts/doctreeview/chm/chm.cpp	2004-07-11 16:01:56.676004664 +0800
@@ -29,6 +29,8 @@
 #include <kglobal.h>
 #include <kurl.h>
 #include <kmimemagic.h>
+#include <ktempfile.h>
+#include <qtextcodec.h>
 
 #include "chm.h"
 
@@ -85,8 +86,33 @@
         error( KIO::ERR_DOES_NOT_EXIST, url.prettyURL() );
         return;
     }
-
+	
     QByteArray theData;
+	//init..
+	//add by lucida lucida@users.sf.net
+	QString fname = QString();
+	QString chmpath = QString();
+	KTempFile f("",".html");
+	fname = f.name();
+	QTextStream *t = f.textStream();
+	QString firstPage = QString("");
+	QString m_strIndex = QString("");
+	QString tmpstr = QString("");
+	bool m_bIndex = 0;
+
+	//try get some page to display, if the chm missing index
+	ChmDirectoryMap::Iterator it;
+	for ( it = m_dirMap.begin(); it != m_dirMap.end(); ++it) {
+		tmpstr.sprintf("%s", it.key().latin1());
+		if ((m_strIndex == "") && 
+				(tmpstr.endsWith(".htm") || tmpstr.endsWith(".html")))
+		m_strIndex = tmpstr;
+		if ((tmpstr == "/index.htm") || (tmpstr == "/index.html")) {
+		m_strIndex = tmpstr;
+		break;
+		}
+	}
+	m_strIndex.remove(0,1);
 
     if (path == "/") {
         int offset = m_dirMap["/@contents"].offset;
@@ -118,7 +144,14 @@
                 name = nameParam.cap(1);
 				if (obj.find(localParam) != -1) {
 					local = localParam.cap(1);
-					output += "<a href=\"" + local + "\">" + name + "</a>";
+			//add by lucida lucida@users.sf.net
+					if (local != "" && local != "/") {
+					output += "<a target=\"browse\" href=\"" + url.url() + local + "\">" + name + "</a>";
+					m_bIndex = 1;
+						if (firstPage == "") firstPage = url.url()+QString::fromLocal8Bit(local.latin1());
+					}
+					else 
+					output += name;
 				} else {
 					output += name;
 				}
@@ -127,17 +160,43 @@
 				QString link = mergeParam.cap(1);
 				QString href = link.left(link.find("::"));
 				QString path = m_chmFile.left(m_chmFile.findRev("/") + 1);
-				output += " (<a href=\"" + path + href + "\">link</a>)";
+			//add by lucida lucida@users.sf.net
+				m_bIndex = 1;
+				output += " (<a target=\"browse\" href=\"" + url.url() + path + href + "\">link</a>)";
+				if (firstPage == "") firstPage = url.url()+QString::fromLocal8Bit(local.latin1());
+;
 			}
         }
 		output += s.mid(old);
+
+		//set left pane
+		//add by lucida, lucida@users.sf.net
+		QString lframe = QString("</HEAD><FRAMESET COLS=\"25%,*\">\n");
+		lframe += "<FRAME NAME=\"index\" src=\"file:"+ fname+"\"" + " marginwidth=\"0\"></FRAME>\n";
+		if (!m_bIndex) {
+		lframe = "</HEAD><FRAMESET>";
+		firstPage = url.url() + QString::fromLocal8Bit(m_strIndex.latin1()); 
+		}
         theData.resetRawData(&m_contents[offset], length);
         //KMimeMagicResult * result = KMimeMagic::self()->findBufferFileType( output, path );
         //kdDebug() << "Emitting mimetype " << result->mimeType() << endl;
         //mimeType( result->mimeType() );
-	QCString output1 = (QCString)(output.latin1()); 
-	data(output1); 
-	processedSize(output1.length());
+		//construct the frame
+		//add by lucida lucida@users.sf.net and KanKer kanker@163.com
+               QTextCodec *codec;
+               codec=QTextCodec::codecForLocale();
+		QString framestr = QString("<HTML><HEAD>\n");
+               framestr +="<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=" + QString(codec->name()) + "\">\n";
+		framestr += lframe;
+		framestr += "<FRAME NAME=\"browse\" src=\"" + firstPage + "\">\n";
+		framestr += "</FRAME>\n";
+		framestr += "</FRAMESET></HTML>";
+		//write index file
+		//add by lucida lucida@users.sf.net
+		*t << QString::fromLocal8Bit(output.latin1()) << endl;
+
+		data(framestr.local8Bit());
+	       	processedSize(framestr.length());	
     } else {
         int offset = m_dirMap[path].offset;
         int length = m_dirMap[path].length;
@@ -151,7 +207,7 @@
         theData.resetRawData(&m_contents[offset], length);
         processedSize(length);
     }
-
+	f.close();
     finished();
 }
 
