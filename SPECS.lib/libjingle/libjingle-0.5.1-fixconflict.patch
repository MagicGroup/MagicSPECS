diff -up libjingle-0.5.1/talk/base/basictypes.h.fixconflict libjingle-0.5.1/talk/base/basictypes.h
--- libjingle-0.5.1/talk/base/basictypes.h.fixconflict	2010-11-19 15:36:43.354419670 -0500
+++ libjingle-0.5.1/talk/base/basictypes.h	2010-11-19 15:36:43.605296985 -0500
@@ -47,7 +47,7 @@ typedef long long int64;
 #endif /* COMPILER_MSVC */
 typedef int int32;
 typedef short int16;
-typedef char int8;
+typedef signed char int8;
 
 #ifdef COMPILER_MSVC
 typedef unsigned __int64 uint64;
diff -up libjingle-0.5.1/talk/base/constructormagic.h.fixconflict libjingle-0.5.1/talk/base/constructormagic.h
--- libjingle-0.5.1/talk/base/constructormagic.h.fixconflict	2010-11-08 18:01:43.000000000 -0500
+++ libjingle-0.5.1/talk/base/constructormagic.h	2010-11-19 15:44:19.512176912 -0500
@@ -28,14 +28,11 @@
 #ifndef TALK_BASE_CONSTRUCTORMAGIC_H_
 #define TALK_BASE_CONSTRUCTORMAGIC_H_
 
-#define DISALLOW_ASSIGN(TypeName) \
-  void operator=(const TypeName&)
-
 // A macro to disallow the evil copy constructor and operator= functions
 // This should be used in the private: declarations for a class
 #define DISALLOW_COPY_AND_ASSIGN(TypeName)    \
   TypeName(const TypeName&);                    \
-  DISALLOW_ASSIGN(TypeName)
+  void operator=(const TypeName&)
 
 // Alternative, less-accurate legacy name.
 #define DISALLOW_EVIL_CONSTRUCTORS(TypeName) \
@@ -49,7 +46,7 @@
 // especially useful for classes containing only static methods.
 #define DISALLOW_IMPLICIT_CONSTRUCTORS(TypeName) \
   TypeName();                                    \
-  DISALLOW_EVIL_CONSTRUCTORS(TypeName)
+  DISALLOW_COPY_AND_ASSIGN(TypeName)
 
 
 #endif  // TALK_BASE_CONSTRUCTORMAGIC_H_
