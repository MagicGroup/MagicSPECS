--- MPlayer-1.0rc1/gui/mplayer/gtk/fs.c.orig	2007-02-25 10:30:25.000000000 +0800
+++ MPlayer-1.0rc1/gui/mplayer/gtk/fs.c	2007-02-26 00:00:53.000000000 +0800
@@ -151,7 +151,7 @@
 {
  struct stat     fs;
  int             i,c=2;
- gchar         * str[1][2];
+ gchar         * str[1][3];
  GdkPixmap     * pixmap;
  GdkBitmap     * mask;
  glob_t          gg;
@@ -164,8 +164,8 @@
 
  pixmap=dpixmap; mask=dmask;
  str[0][0]=NULL;
- str[0][1]=".";  gtk_clist_append( GTK_CLIST( list ),str[0] ); gtk_clist_set_pixmap( GTK_CLIST( list ),0,0,pixmap,mask );
- str[0][1]=".."; gtk_clist_append( GTK_CLIST( list ),str[0] ); gtk_clist_set_pixmap( GTK_CLIST( list ),1,0,pixmap,mask );
+ str[0][1]=str[0][2]=".";  gtk_clist_append( GTK_CLIST( list ),str[0] ); gtk_clist_set_pixmap( GTK_CLIST( list ),0,0,pixmap,mask );
+ str[0][1]=str[0][2]=".."; gtk_clist_append( GTK_CLIST( list ),str[0] ); gtk_clist_set_pixmap( GTK_CLIST( list ),1,0,pixmap,mask );
 
  glob( "*",0,NULL,&gg );
 // glob( ".*",GLOB_NOSORT | GLOB_APPEND,NULL,&gg );
@@ -175,8 +175,10 @@
    if( !S_ISDIR( fs.st_mode ) ) continue;
 
    str[0][1]=gg.gl_pathv[i];
+   str[0][2]=g_filename_to_utf8(gg.gl_pathv[i], -1, NULL, NULL, NULL);
    pixmap=dpixmap; mask=dmask;
    gtk_clist_append( GTK_CLIST( list ),str[0] );
+   g_free(str[0][2]);
    gtk_clist_set_pixmap( GTK_CLIST( list ),c++,0,pixmap,mask );
   }
  globfree( &gg );
@@ -223,7 +225,9 @@
    if(  S_ISDIR( fs.st_mode ) ) continue;
 
    str[0][1]=gg.gl_pathv[i];
+   str[0][2]=g_filename_to_utf8(gg.gl_pathv[i], -1, NULL, NULL, NULL);
    gtk_clist_append( GTK_CLIST( list ),str[0] );
+   g_free(str[0][2]);
    gtk_clist_set_pixmap( GTK_CLIST( list ),c++,0,pixmap,mask );
   }
  globfree( &gg );
@@ -320,21 +324,36 @@
    free( dir );
   }
  
- if ( fsTopList_items ) g_list_free( fsTopList_items ); fsTopList_items=NULL;
+ if ( fsTopList_items )
+ {
+  GList *iter;
+  
+  for (iter = fsTopList_items; iter != NULL; iter = iter->next)
+	  g_free(iter->data);
+  g_list_free( fsTopList_items );
+ }
+ fsTopList_items=NULL;
  {
   int  i, c = 1;
   
   if ( fsType == fsVideoSelector )
    {
     for ( i=0;i < fsPersistant_MaxPos;i++ )
-     if ( fsHistory[i] ) { fsTopList_items=g_list_append( fsTopList_items,fsHistory[i] ); c=0; }
+     if ( fsHistory[i] )
+      {
+       fsTopList_items=g_list_append( fsTopList_items,
+	 g_filename_to_utf8( fsHistory[i], -1, NULL, NULL, NULL ) );
+       c=0;
+      }
    }
-  if ( c ) fsTopList_items=g_list_append( fsTopList_items,(gchar *)get_current_dir_name() );
+  if ( c ) fsTopList_items=g_list_append( fsTopList_items,
+    g_filename_to_utf8(get_current_dir_name(), -1, NULL, NULL, NULL ) );
  }
- if ( getenv( "HOME" ) ) fsTopList_items=g_list_append( fsTopList_items,getenv( "HOME" ) );
- fsTopList_items=g_list_append( fsTopList_items,"/home" );
- fsTopList_items=g_list_append( fsTopList_items,"/mnt" );
- fsTopList_items=g_list_append( fsTopList_items,"/" );
+ if ( getenv( "HOME" ) ) fsTopList_items=g_list_append( fsTopList_items,
+   g_filename_to_utf8( getenv( "HOME" ), -1, NULL, NULL, NULL ) );
+ fsTopList_items=g_list_append( fsTopList_items,g_strdup( "/home" ) );
+ fsTopList_items=g_list_append( fsTopList_items,g_strdup( "/mnt" ) );
+ fsTopList_items=g_list_append( fsTopList_items,g_strdup( "/" ) );
  gtk_combo_set_popdown_strings( GTK_COMBO( fsCombo4 ),fsTopList_items );
   
  gtk_window_set_modal( GTK_WINDOW( fsFileSelect ),modal );
@@ -418,7 +437,9 @@
  unsigned char * str;
 
  str=gtk_entry_get_text( GTK_ENTRY( user_data ) );
+ str=g_filename_from_utf8(str, -1, NULL, NULL, NULL);
  if ( chdir( str ) != -1 ) CheckDir( fsFNameList,get_current_dir_name() );
+ g_free(str);
 }
 
 void fs_fsPathCombo_changed( GtkEditable * editable,gpointer user_data )
@@ -426,16 +447,23 @@
  unsigned char * str;
 
  str=gtk_entry_get_text( GTK_ENTRY( user_data ) );
+ str=g_filename_from_utf8(str, -1, NULL, NULL, NULL);
  fsPressed=2;
  if ( chdir( str ) != -1 ) CheckDir( fsFNameList,get_current_dir_name() );
+ g_free(str);
 }
 
 void fs_Up_released( GtkButton * button,gpointer user_data )
 {
+ unsigned char *str;
+
  chdir( ".." );
  fsSelectedFile=fsThatDir;
  CheckDir( fsFNameList,get_current_dir_name() );
- gtk_entry_set_text( GTK_ENTRY( fsPathCombo ),(unsigned char *)get_current_dir_name() );
+ str=(unsigned char *)get_current_dir_name();
+ str=g_filename_to_utf8(str, -1, NULL, NULL, NULL );
+ gtk_entry_set_text( GTK_ENTRY( fsPathCombo ), str );
+ g_free(str);
  return;
 }
 
@@ -447,6 +475,7 @@
  return 1;
 }
 
+static const char *fsFileNameTemp = NULL;
 void fs_Ok_released( GtkButton * button,gpointer user_data )
 {
  unsigned char * str;
@@ -460,7 +489,10 @@
    chdir( fsSelectedFile );
    fsSelectedFile=fsThatDir;
    CheckDir( fsFNameList,get_current_dir_name() );
-   gtk_entry_set_text( GTK_ENTRY( fsPathCombo ),(unsigned char *)get_current_dir_name() );
+   str=get_current_dir_name();
+   str=g_filename_to_utf8(str, -1, NULL, NULL, NULL);
+   gtk_entry_set_text( GTK_ENTRY( fsPathCombo ), str );
+   g_free(str);
    return;
   }
 
@@ -471,6 +503,10 @@
         break;
    case 2:
         str=gtk_entry_get_text( GTK_ENTRY( fsPathCombo ) );
+		str=g_filename_from_utf8(str, -1, NULL, NULL, NULL);
+		if (fsFileNameTemp != NULL)
+			g_free(fsFileNameTemp);
+		fsFileNameTemp=str;
         fsSelectedFile=str;
         if ( !fsFileExist( fsSelectedFile ) ) { HideFileSelect(); return; }
         fsSelectedDirectory=fsSelectedFile;
@@ -520,12 +556,17 @@
  HideFileSelect();
 
  item=fsTopList_items;
+ str=g_filename_to_utf8(fsSelectedDirectory, -1, NULL, NULL, NULL);
  while( item )
   {
-   if ( !strcmp( item->data,fsSelectedDirectory ) ) i=0;
+   if ( !strcmp( item->data,str ) )
+    {
+     i=0;
+     break;
+    }
    item=item->next;
   }
- if ( i ) fsTopList_items=g_list_prepend( fsTopList_items,(gchar *)get_current_dir_name() );
+ if ( i ) fsTopList_items=g_list_prepend( fsTopList_items,str );
  if ( mplMainAutoPlay ) { mplMainAutoPlay=0; mplEventHandling( evPlay,0 ); }
   else guiGetEvent( guiCEvent,guiSetStop );
 }
@@ -637,13 +678,14 @@
  gtk_widget_set_usize( fsFNameListWindow,-2,145 );
  gtk_scrolled_window_set_policy( GTK_SCROLLED_WINDOW( fsFNameListWindow ),GTK_POLICY_NEVER,GTK_POLICY_AUTOMATIC );
 
- fsFNameList=gtk_clist_new( 2 );
+ fsFNameList=gtk_clist_new( 3 );
  gtk_widget_set_name( fsFNameList,"fsFNameList" );
  gtk_container_add( GTK_CONTAINER( fsFNameListWindow ),fsFNameList );
  gtk_clist_set_column_width( GTK_CLIST( fsFNameList ),0,80 );
  gtk_clist_set_selection_mode( GTK_CLIST( fsFNameList ),GTK_SELECTION_BROWSE );
  gtk_clist_column_titles_hide( GTK_CLIST( fsFNameList ) );
  gtk_clist_set_shadow_type( GTK_CLIST( fsFNameList ),GTK_SHADOW_ETCHED_OUT );
+ gtk_clist_set_column_visibility( GTK_CLIST( fsFNameList), 1, FALSE );
 
  AddHSeparator( vbox4 );
 
--- MPlayer-1.0rc1/gui/mplayer/gtk/pl.c.orig	2007-02-25 09:55:27.000000000 +0800
+++ MPlayer-1.0rc1/gui/mplayer/gtk/pl.c	2007-02-26 01:11:02.000000000 +0800
@@ -160,9 +160,11 @@
    while ( next || next->next )
     {
      char * text[1][3]; text[0][2]="";
-     text[0][0]=next->name;
-     text[0][1]=next->path;
+     text[0][0]=g_filename_to_utf8(next->name, -1, NULL, NULL, NULL);
+     text[0][1]=g_filename_to_utf8(next->path, -1, NULL, NULL, NULL);
      gtk_clist_append( GTK_CLIST( CLSelected ),text[0] );
+     g_free(text[0][0]);
+     g_free(text[0][1]);
      NrOfSelected++;
      if ( next->next ) next=next->next; else break;
     }
@@ -214,11 +216,14 @@
 	 {
 	  plItem * item;
 	  char * text[3];
+	  char * tp;
 	  item=calloc( 1,sizeof( plItem ) );
 	  gtk_clist_get_text( GTK_CLIST( CLSelected ),i,0,&text[0] );
 	  gtk_clist_get_text( GTK_CLIST( CLSelected ),i,1,&text[1] );
-	  item->name=strdup( text[0] );
-	  item->path=strdup( text[1] );
+	  tp=g_filename_from_utf8( text[0], -1, NULL, NULL, NULL );
+	  item->name=strdup( tp ); g_free( tp );
+	  tp=g_filename_from_utf8( text[1], -1, NULL, NULL, NULL );
+	  item->path=strdup( tp ); g_free( tp );
 	  gtkSet( gtkAddPlItem,0,(void*)item );
 	 }
 	if ( plCurrent )
@@ -267,8 +272,10 @@
           if ( CLFileSelected[i] )
            {
 	    gtk_clist_get_text( GTK_CLIST( CLFiles ),i,0,(char **)&itext );
-	    text[0][0]=itext[0][0]; text[0][1]=current_path;
+	    text[0][0]=itext[0][0];
+	    text[0][1]=g_filename_to_utf8(current_path, -1, NULL, NULL, NULL);
 	    gtk_clist_append( GTK_CLIST( CLSelected ),text[0] );
+	    g_free(text[0][1]);
 	    NrOfSelected++;
 	    CLListSelected=realloc( CLListSelected,NrOfSelected * sizeof( int ) );
 	    CLListSelected[NrOfSelected - 1]=0;
@@ -332,13 +339,14 @@
        path=calloc( 1,strlen( DirNode->path ) + strlen( dirent->d_name ) + 2 );
        if ( !strcmp( current_path,"/" ) ) sprintf( path,"/%s",dirent->d_name );
 	else sprintf( path,"%s/%s",current_path,dirent->d_name );
-       text=dirent->d_name;
+       text=g_filename_to_utf8(dirent->d_name, -1, NULL, NULL, NULL);
 
        if ( stat( path,&statbuf ) != -1 && S_ISDIR( statbuf.st_mode ) && dirent->d_name[0] != '.' )
 	{
 	 DirNode=malloc( sizeof( DirNodeType ) ); DirNode->scaned=0; DirNode->path=strdup( path );
 	 subdir=check_for_subdir( path );
 	 node=gtk_ctree_insert_node( ctree,parent_node,NULL,&text,4,pxOpenedBook,msOpenedBook,pxClosedBook,msClosedBook,!subdir,FALSE );
+	 g_free(text);
 	 gtk_ctree_node_set_row_data_full( ctree,node,DirNode,NULL );
 	 if ( subdir ) node=gtk_ctree_insert_node( ctree,node,NULL,&dummy,4,NULL,NULL,NULL,NULL,FALSE,FALSE );
 	}
@@ -369,8 +377,9 @@
 	 curr=calloc( 1,strlen( path ) + strlen( dirent->d_name ) + 3 ); sprintf( curr,"%s/%s",path,dirent->d_name );
 	 if ( stat( curr,&statbuf ) != -1 && ( S_ISREG( statbuf.st_mode ) || S_ISLNK( statbuf.st_mode ) ) )
 	  {
-	   text[0][0]=dirent->d_name;
+	   text[0][0]=g_filename_to_utf8(dirent->d_name, -1, NULL, NULL, NULL);
 	   gtk_clist_append( GTK_CLIST( CLFiles ),text[0] );
+		 g_free(text[0][0]);
 	   NrOfEntrys++;
 	  }
 	 free( curr );
