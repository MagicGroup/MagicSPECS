commit bb237a04a0ecd44157ee59ce280e8c3bfc456ca1
Author: Peter Rajnoha <prajnoha@redhat.com>
Date:   Mon Jan 27 11:19:09 2014 +0100

    thin pool

diff --git a/WHATS_NEW b/WHATS_NEW
index 26b63ae..b755720 100644
--- a/WHATS_NEW
+++ b/WHATS_NEW
@@ -1,3 +1,7 @@
+Version 2.02.105 - 
+====================================
+  Avoid exposing temporary devices when initializing thin pool volume.
+
 Version 2.02.105 - 20th January 2014
 ====================================
   Fix thin LV flagging for udev to skip scanning only if the LV is wiped.
diff --git a/lib/metadata/metadata-exported.h b/lib/metadata/metadata-exported.h
index 8e36891..cc58941 100644
--- a/lib/metadata/metadata-exported.h
+++ b/lib/metadata/metadata-exported.h
@@ -105,9 +105,10 @@
 #define LV_NOSCAN		UINT64_C(0x0000080000000000)	/* LV - internal use only - the LV
 									should not be scanned */
 #define LV_TEMPORARY		UINT64_C(0x0000100000000000)	/* LV - internal use only - the LV
-								        is supposed to be created and
-									removed during single LVM
-									command execution. */
+									is supposed to be created and
+									removed or reactivated with
+									this flag dropped during single
+									LVM command execution. */
 
 /* Format features flags */
 #define FMT_SEGMENTS		0x00000001U	/* Arbitrary segment params? */
diff --git a/lib/metadata/thin_manip.c b/lib/metadata/thin_manip.c
index e12a8ad..3eeb757 100644
--- a/lib/metadata/thin_manip.c
+++ b/lib/metadata/thin_manip.c
@@ -484,7 +484,13 @@ int create_pool(struct logical_volume *pool_lv, const struct segment_type *segty
 		 *
 		 * FIXME: implement lazy clearing when activation is disabled
 		 */
-		/* pool_lv is a new LV so the VG lock protects us */
+		/*
+		 * pool_lv is a new LV so the VG lock protects us
+		 * Pass in LV_TEMPORARY flag, since device is activated purely for wipe
+		 * and later it is either deactivated (in cluster)
+		 * or directly converted to invisible device via suspend/resume
+		*/
+		pool_lv->status |= LV_TEMPORARY;
 		if (!activate_lv_local(pool_lv->vg->cmd, pool_lv) ||
 		    /* Clear 4KB of metadata device for new thin-pool. */
 		    !wipe_lv(pool_lv, (struct wipe_params) { .do_zero = 1 })) {
@@ -492,6 +498,7 @@ int create_pool(struct logical_volume *pool_lv, const struct segment_type *segty
 				  pool_lv->name);
 			goto bad;
 		}
+		pool_lv->status &= ~LV_TEMPORARY;
 	}
 
 	if (dm_snprintf(name, sizeof(name), "%s_tmeta", pool_lv->name) < 0) {
