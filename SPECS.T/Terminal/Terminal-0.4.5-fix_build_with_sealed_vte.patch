--- xfce4-terminal-0.4.5.orig/terminal/terminal-widget.c
+++ xfce4-terminal-0.4.5/terminal/terminal-widget.c
@@ -289,7 +289,7 @@
     return;
 
   /* check if we have a match */
-  match = vte_terminal_match_check (terminal, x / terminal->char_width, y / terminal->char_height, &tag);
+  match = vte_terminal_match_check (terminal, x / vte_terminal_get_char_width (terminal), y / vte_terminal_get_char_height (terminal), &tag);
   if (G_UNLIKELY (match != NULL))
     {
       /* prepend a separator to the menu if it does not already contain one */
@@ -401,8 +401,8 @@
     {
       /* middle-clicking on an URI fires the responsible application */
       match = vte_terminal_match_check (VTE_TERMINAL (widget),
-                                        event->x / VTE_TERMINAL (widget)->char_width,
-                                        event->y / VTE_TERMINAL (widget)->char_height,
+                                        event->x / vte_terminal_get_char_width (VTE_TERMINAL (widget)),
+                                        event->y / vte_terminal_get_char_height (VTE_TERMINAL (widget)),
                                         &tag);
       if (G_UNLIKELY (match != NULL))
         {
@@ -611,7 +611,7 @@
 terminal_widget_key_press_event (GtkWidget    *widget,
                                  GdkEventKey  *event)
 {
-  GtkAdjustment *adjustment = VTE_TERMINAL (widget)->adjustment;
+  GtkAdjustment *adjustment = vte_terminal_get_adjustment (VTE_TERMINAL (widget));
   gboolean       scrolling_single_line;
   gboolean       shortcuts_no_menukey;
   gdouble        value;
--- xfce4-terminal-0.4.5.orig/terminal/terminal-screen.c
+++ xfce4-terminal-0.4.5/terminal/terminal-screen.c
@@ -248,7 +248,7 @@
                     NULL);
   gtk_box_pack_start (GTK_BOX (screen), screen->terminal, TRUE, TRUE, 0);
 
-  screen->scrollbar = gtk_vscrollbar_new (VTE_TERMINAL (screen->terminal)->adjustment);
+  screen->scrollbar = gtk_vscrollbar_new (vte_terminal_get_adjustment (VTE_TERMINAL (screen->terminal)));
   gtk_box_pack_start (GTK_BOX (screen), screen->scrollbar, FALSE, FALSE, 0);
   g_signal_connect_after (G_OBJECT (screen->scrollbar), "button-press-event", G_CALLBACK (exo_noop_true), NULL);
   gtk_widget_show (screen->scrollbar);
@@ -385,7 +385,7 @@
             }
           else if (G_LIKELY (screen->terminal != NULL))
             {
-              title = VTE_TERMINAL (screen->terminal)->window_title;
+              title = vte_terminal_get_window_title (VTE_TERMINAL (screen->terminal));
             }
 
           /* TRANSLATORS: title for the tab/window used when all other
@@ -618,7 +618,7 @@
 
         case 'w':
           /* window title from vte */
-          vte_title = VTE_TERMINAL (screen->terminal)->window_title;
+          vte_title = vte_terminal_get_window_title (VTE_TERMINAL (screen->terminal));
           if (G_UNLIKELY (vte_title == NULL))
             vte_title = _("Untitled");
           g_string_append (string, vte_title);
@@ -1108,12 +1108,12 @@
 #else
   vte_terminal_get_padding (terminal, &xpad, &ypad);
 #endif
-  grid_width = (width - xpad) / terminal->char_width;
-  grid_height = (height - ypad) / terminal->char_height;
+  grid_width = (width - xpad) / vte_terminal_get_char_width (terminal);
+  grid_height = (height - ypad) / vte_terminal_get_char_height (terminal);
 
   /* leave if there is nothing to resize */
-  if (terminal->column_count == grid_width
-      && terminal->row_count == grid_height)
+  if (vte_terminal_get_column_count (terminal) == grid_width
+      && vte_terminal_get_row_count (terminal) == grid_height)
     return;
 
   /* set the terminal size and resize the window if it is active */
@@ -1416,8 +1416,8 @@
       if (!GTK_WIDGET_REALIZED (screen->terminal))
         gtk_widget_realize (screen->terminal);
 
-      *width_chars = VTE_TERMINAL (screen->terminal)->column_count;
-      *height_chars = VTE_TERMINAL (screen->terminal)->row_count;
+      *width_chars = vte_terminal_get_column_count (VTE_TERMINAL (screen->terminal));
+      *height_chars = vte_terminal_get_row_count (VTE_TERMINAL (screen->terminal));
     }
 }
 
@@ -1470,8 +1470,8 @@
 
   hints.base_width = xpad;
   hints.base_height = ypad;
-  hints.width_inc = VTE_TERMINAL (screen->terminal)->char_width ;
-  hints.height_inc = VTE_TERMINAL (screen->terminal)->char_height;
+  hints.width_inc = vte_terminal_get_char_width (VTE_TERMINAL (screen->terminal));
+  hints.height_inc = vte_terminal_get_char_height (VTE_TERMINAL (screen->terminal));
   hints.min_width = hints.base_width + hints.width_inc * 4;
   hints.min_height = hints.base_height + hints.height_inc * 2;
 
@@ -1522,12 +1522,12 @@
   height = MAX (window_requisition.height - terminal_requisition.height, 0);
 
   if (force_columns < 0)
-    columns = VTE_TERMINAL (screen->terminal)->column_count;
+    columns = vte_terminal_get_column_count (VTE_TERMINAL (screen->terminal));
   else
     columns = force_columns;
 
   if (force_rows < 0)
-    rows = VTE_TERMINAL (screen->terminal)->row_count;
+    rows = vte_terminal_get_row_count (VTE_TERMINAL (screen->terminal));
   else
     rows = force_rows;
 
@@ -1539,8 +1539,8 @@
   vte_terminal_get_padding (VTE_TERMINAL (screen->terminal), &xpad, &ypad);
 #endif
 
-  width += xpad + VTE_TERMINAL (screen->terminal)->char_width * columns;
-  height += ypad + VTE_TERMINAL (screen->terminal)->char_height * rows;
+  width += xpad + vte_terminal_get_char_width (VTE_TERMINAL (screen->terminal)) * columns;
+  height += ypad + vte_terminal_get_char_height (VTE_TERMINAL (screen->terminal)) * rows;
 
   if (GTK_WIDGET_MAPPED (window))
     gtk_window_resize (window, width, height);
@@ -1573,7 +1573,7 @@
   if (G_UNLIKELY (screen->custom_title != NULL))
     return terminal_screen_parse_title (screen, screen->custom_title);
 
-  vte_title = VTE_TERMINAL (screen->terminal)->window_title;
+  vte_title = vte_terminal_get_window_title (VTE_TERMINAL (screen->terminal));
   g_object_get (G_OBJECT (screen->preferences),
                 "title-mode", &mode,
                 "title-initial", &tmp,
