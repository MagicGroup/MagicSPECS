diff --git a/MANIFEST.in b/MANIFEST.in
index e497efb..dc0cfae 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -13,10 +13,3 @@ recursive-include preuputils *
 recursive-include postupgrade.d *
 recursive-include man *
 recursive-include kickstart *
-
-include preup_ui/report/fixtures/initial_data.json
-include ui-conf/99-preup-httpd.conf
-include ui-conf/99-preup-httpd.conf.public
-recursive-include preup_ui/static *
-recursive-include preup_ui/templates *
-recursive-include preup_ui/lib *
diff --git a/preup/application.py b/preup/application.py
index adb1836..6549837 100644
--- a/preup/application.py
+++ b/preup/application.py
@@ -11,11 +11,6 @@ import sys
 import six
 from distutils import dir_util
 
-try:
-    from xmlrpclib import Fault
-except ImportError:
-    from xmlrpc.client import Fault
-
 from preup import xccdf, xml_manager, remediate, utils, settings
 from preup.common import Common
 from preup.scanning import ScanProgress, format_rules_to_table
@@ -33,14 +28,6 @@ def get_xsl_stylesheet():
     return os.path.join(settings.share_dir, "preupgrade", "xsl", settings.xsl_sheet)
 
 
-def fault_repr(self):
-    """monkey patching Fault's repr method so newlines are actually interpreted"""
-    log_message(self.faultString)
-    return "<Fault %s: %s>" % (self.faultCode, self.faultString)
-
-Fault.__repr__ = fault_repr
-
-
 def list_contents(source_dir):
     """Function returns a list of installed contents"""
     content_dict = {}
@@ -175,57 +162,6 @@ class Application(object):
         command.append(check_xml(self.content))
         return command
 
-    def upload_results(self, tarball_path=None):
-        """upload tarball with results to frontend"""
-        import xmlrpclib
-        import socket
-        if self.conf.upload is True:
-            # lets try default configuration
-            url = "http://127.0.0.1:8099/submit/"
-        else:
-            url = self.conf.upload \
-                if self.conf.upload[-1] == '/' \
-                else self.conf.upload + '/'
-        try:
-            proxy = xmlrpclib.ServerProxy(url)
-            proxy.submit.ping()
-        except Exception:
-            raise Exception('Can\'t connect to preupgrade assistant WEB-UI at %s.\n\n'
-                'Please ensure that package preupgrade-assistant-ui '
-                'has been installed on target system and firewall is set up '
-                'to allow connections on port 8099.' % url)
-
-        tarball_results = self.conf.results or tarball_path
-        file_content = get_file_content(tarball_results, 'rb')
-
-        binary = xmlrpclib.Binary(file_content)
-        host = socket.gethostname()
-        response = proxy.submit.submit_new({
-            'data': binary,
-            'host': host,
-        })
-        try:
-            status = response['status']
-        except KeyError:
-            log_message('Invalid response from server.')
-            log_message("Invalid response from server: %s" % response, level=logging.ERROR)
-        else:
-            if status == 'OK':
-                try:
-                    url = response['url']
-                except KeyError:
-                    log_message('Report submitted successfully.')
-                else:
-                    log_message('Report submitted successfully. You can inspect it at %s' % url)
-            else:
-                try:
-                    message = response['message']
-                    log_message('Report not submitted. Server returned message: ', message)
-                    log_message("Report submit: %s (%s)" % (status, message), level=logging.ERROR)
-                except KeyError:
-                    log_message('Report not submitted. Server returned status: ', status)
-                    log_message("Report submit: %s" % status, level=logging.ERROR)
-
     def apply_scan(self):
         """Extract tar ball for remediation"""
         self.prepare_apply_directories()
@@ -670,8 +606,6 @@ If you would like to use this tool, you have to have only one." % settings.sourc
             self.summary_report()
             self.common.copy_common_files()
             utils.remove_home_issues()
-            if self.conf.upload:
-                self.upload_results(tarball_path)
             os.chdir(current_dir)
             return 0
 
diff --git a/preup/cli.py b/preup/cli.py
index 06f82fc..0fad068 100644
--- a/preup/cli.py
+++ b/preup/cli.py
@@ -8,23 +8,6 @@ from optparse import OptionValueError
 from preup.constants import *
 
 
-def upload_callback(option, dummy_opt_str, dummy_value, parser):
-    if len(parser.rargs) == 0:
-        setattr(parser.values, option.dest, True)
-    else:
-        if parser.rargs[0].startswith('-'):
-            setattr(parser.values, option.dest, True)
-        else:
-            setattr(parser.values, option.dest, parser.rargs[0])
-            try:
-                second_arg = parser.rargs[1]
-            except IndexError:
-                pass
-            else:
-                if not second_arg.startswith('-'):
-                    raise OptionValueError("Specify at most one argument for upload option.")
-
-
 class CLI(object):
 
     """Class for processing data from commandline"""
@@ -53,17 +36,6 @@ class CLI(object):
             help="Turn on debugging mode"
         )
         self.parser.add_option(
-            "-u", "--upload",
-            dest="upload",
-            action="callback",
-            callback=upload_callback,
-            #metavar="http://127.0.0.1:8000/submit/",
-            help="--upload http://127.0.0.1:8000/submit/\n\n\n\n\n\n\n\n\n\n\n\n\n\
-Upload results to preupgrade assistant WEB-UI, \
-optionally provide URL (otherwise default UI configuration \
-will used -- http://127.0.0.1:8099/submit/)"
-        )
-        self.parser.add_option(
             "-r", "--results",
             type=str,
             metavar="results.tar.gz",
diff --git a/preupg b/preupg
index e683585..7e9db33 100755
--- a/preupg
+++ b/preupg
@@ -2,6 +2,7 @@
 # -*- coding: utf-8 -*-
 
 
+from __future__ import print_function
 import sys
 from preup.cli import CLI
 from preup.application import Application
@@ -22,7 +23,7 @@ def main():
         try:
             ret = app.run()
         except KeyboardInterrupt:
-            print '\nAssessment interrupted.'
+            print ('\nAssessment interrupted.')
             return 1
         except Exception as ex:
             cli.parser.error(str(ex))
diff --git a/setup.py b/setup.py
index 8a81d32..b6d8bb8 100755
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ from scripts.include import *
 from setuptools import setup
 
 project_name            = "preupgrade-assistant"
-project_dirs            = ["preup", "preup_ui", "common", "preuputils"]
+project_dirs            = ["preup", "common", "preuputils"]
 project_url             = "https://github.com/phracek/preupgrade-assistant/"
 project_author          = "Red Hat, Inc."
 project_author_email    = "phracek@redhat.com"
@@ -18,10 +18,9 @@ package_name            = "%s" % project_name
 package_module_name     = project_name
 package_version         = "0.11.12"
 
-script_files = ['preupg', 'premigrate', 'preupg-xccdf-compose', 'preupg-create-group-xml', 'preup_ui_manage']
+script_files = ['preupg', 'premigrate', 'preupg-xccdf-compose', 'preupg-create-group-xml']
 
 data_files = {
-    'preup_ui/report/fixtures/': ['preup_ui/report/fixtures/initial_data.json'],
     'preuputils/': ['preuputils/template.xml'],
     '/usr/share/preupgrade/': ['common.sh', 'README', 'README.kickstart'],
     '/usr/share/preupgrade/common': ['common/scripts.txt', 'common/post_scripts.txt'],
@@ -29,12 +28,6 @@ data_files = {
     '/usr/share/preupgrade/postupgrade.d': ['postupgrade.d/copy_clean_conf.sh'],
 }
 
-# recursively add templates and static
-paths = ['preup_ui/templates/', 'preup_ui/static/', 'preup_ui/lib/']
-for path in paths:
-    for root, dirs, files in os.walk(path):
-        data_files[root] = [os.path.join(root, f) for f in files]
-
 # override default tarball format with bzip2
 distutils.command.sdist.sdist.default_format = {'posix': 'bztar'}
 
