Description: Wrap boost includes to avoid FTBFS due to qt4 moc.
Author: Robert Bruce Park <robert.park@canonical.com>
Bug-Debian: https://bugs.debian.org/795144
Last-Update: <2015-10-03>

--- a/src/core/boundfuturewatcher.h
+++ b/src/core/boundfuturewatcher.h
@@ -21,7 +21,9 @@
 
 #include <QFutureWatcher>
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 template <typename T, typename D>
 class BoundFutureWatcher : public QFutureWatcher<T>, boost::noncopyable {
--- a/src/core/database.cpp
+++ b/src/core/database.cpp
@@ -31,7 +31,9 @@
 #include "core/logging.h"
 #include "core/taskmanager.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/scope_exit.hpp>
+#endif
 
 #include <sqlite3.h>
 
--- a/src/core/macglobalshortcutbackend.mm
+++ b/src/core/macglobalshortcutbackend.mm
@@ -18,7 +18,9 @@
 
 #include "macglobalshortcutbackend.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 #include <AppKit/NSEvent.h>
 #include <AppKit/NSWorkspace.h>
--- a/src/core/scopedtransaction.h
+++ b/src/core/scopedtransaction.h
@@ -20,7 +20,9 @@
 #ifndef SCOPEDTRANSACTION_H
 #define SCOPEDTRANSACTION_H
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 class QSqlDatabase;
 
--- a/src/core/signalchecker.h
+++ b/src/core/signalchecker.h
@@ -21,8 +21,10 @@
 
 #include <glib-object.h>
 
+#ifndef Q_MOC_RUN
 #include <boost/function_types/function_arity.hpp>
 #include <boost/typeof/typeof.hpp>
+#endif
 
 // Do not call this directly, use CHECKED_GCONNECT instead.
 bool CheckedGConnect(gpointer source, const char* signal, GCallback callback,
--- a/src/devices/macdevicelister.mm
+++ b/src/devices/macdevicelister.mm
@@ -38,7 +38,9 @@
 #import <Foundation/NSString.h>
 #import <Foundation/NSURL.h>
 
+#ifndef Q_MOC_RUN
 #include <boost/scope_exit.hpp>
+#endif
 
 #include <libmtp.h>
 
