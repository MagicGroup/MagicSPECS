--- a/configure.ac
+++ b/configure.ac
@@ -110,19 +110,10 @@ PKG_CHECK_MODULES(TRAY, gtk+-3.0)
 PKG_CHECK_MODULES(GVC, libpulse libpulse-mainloop-glib gobject-2.0)
 PKG_CHECK_MODULES(DESKTOP_SCHEMAS, cinnamon-desktop >= 1.0.0)
 
-AC_MSG_CHECKING([for bluetooth support])
-PKG_CHECK_EXISTS([gnome-bluetooth-1.0 >= 3.1.0],
-        [BLUETOOTH_DIR=`$PKG_CONFIG --variable=applet_libdir gnome-bluetooth-1.0`
-	 BLUETOOTH_LIBS=`$PKG_CONFIG --variable=applet_libs gnome-bluetooth-1.0`
-	 AC_SUBST([BLUETOOTH_LIBS],["$BLUETOOTH_LIBS"])
-	 AC_SUBST([BLUETOOTH_DIR],["$BLUETOOTH_DIR"])
-	 AC_DEFINE_UNQUOTED([BLUETOOTH_DIR],["$BLUETOOTH_DIR"],[Path to installed GnomeBluetooth typelib and library])
-	 AC_DEFINE([HAVE_BLUETOOTH],[1],[Define if you have libgnome-bluetooth-applet])
-	 AC_SUBST([HAVE_BLUETOOTH],[1])
-	 AC_MSG_RESULT([yes])],
-	[AC_DEFINE([HAVE_BLUETOOTH],[0])
-	 AC_SUBST([HAVE_BLUETOOTH],[0])
-	 AC_MSG_RESULT([no])])
+PKG_CHECK_MODULES(BLUETOOTH, gnome-bluetooth-1.0 >= 3.9.0,
+        [AC_DEFINE([HAVE_BLUETOOTH],[1],[Define if you have libgnome-bluetooth-applet])
+	 AC_SUBST([HAVE_BLUETOOTH],[1])],
+	 AC_SUBST([HAVE_BLUETOOTH],[0])])
 
 MUFFIN_GIR_DIR=`$PKG_CONFIG --variable=girdir libmuffin`
 MUFFIN_TYPELIB_DIR=`$PKG_CONFIG --variable=typelibdir libmuffin`
--- a/src/cinnamon-plugin.c
+++ b/src/cinnamon-plugin.c
@@ -401,17 +401,3 @@ MetaPluginInfo *gnome_cinnamon_plugin_pl
 
   return &info;
 }
-
-#if HAVE_BLUETOOTH
-/* HACK:
-   Add a non-static function that calls into libgnome-bluetooth-applet.so,
-   to avoid the linker being too smart and removing the dependency.
-   This function is never actually called.
-*/
-extern GType bluetooth_applet_get_type(void);
-void _cinnamon_link_to_bluetooth(void);
-
-void _cinnamon_link_to_bluetooth(void) {
-  bluetooth_applet_get_type();
-}
-#endif
--- a/src/main.c
+++ b/src/main.c
@@ -265,17 +265,12 @@ main (int argc, char **argv)
   cinnamon_perf_log_init ();
 
   g_irepository_prepend_search_path (CINNAMON_PKGLIBDIR);
-#if HAVE_BLUETOOTH
-  g_irepository_prepend_search_path (BLUETOOTH_DIR);
-#endif
 
   /* Disable debug spew from various libraries */
   g_log_set_handler ("Gvc", G_LOG_LEVEL_DEBUG,
                      muted_log_handler, NULL);
   g_log_set_handler ("AccountsService", G_LOG_LEVEL_DEBUG,
                      muted_log_handler, NULL);
-  g_log_set_handler ("Bluetooth", G_LOG_LEVEL_DEBUG | G_LOG_LEVEL_MESSAGE,
-                     muted_log_handler, NULL);
 
   /* Initialize the global object */
   _cinnamon_global_init (NULL);
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -258,7 +258,6 @@ libcinnamon_la_LDFLAGS = -avoid-version
 libcinnamon_la_LIBADD =		\
 	-lm			\
 	$(CINNAMON_LIBS)	\
-	$(BLUETOOTH_LIBS)	\
 	libst-1.0.la       	\
 	libtray.la		\
 	libgvc.la		\
@@ -272,7 +271,7 @@ Cinnamon_0_1_gir_CFLAGS = $(libcinnamon_
 Cinnamon_0_1_gir_LIBS = libcinnamon.la
 Cinnamon_0_1_gir_FILES = $(libcinnamon_la_gir_sources)
 Cinnamon_0_1_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/St-1.0.gir \
-	--add-include-path=$(MUFFIN_GIR_DIR) $(if $(BLUETOOTH_DIR),-L $(BLUETOOTH_DIR),)
+	--add-include-path=$(MUFFIN_GIR_DIR)
 INTROSPECTION_GIRS += Cinnamon-0.1.gir
 CLEANFILES += Cinnamon-0.1.gir
 
--- a/src/run-js-test.c
+++ b/src/run-js-test.c
@@ -130,14 +130,6 @@ main(int argc, char **argv)
   clutter_stage_set_title (CLUTTER_STAGE (stage), title);
   g_free (title);
 
-#if HAVE_BLUETOOTH
-  /* The module imports are all so intertwined that if the test
-   * imports anything in js/ui, it will probably eventually end up
-   * pulling in ui/status/bluetooth.js. So we need this.
-   */
-  g_irepository_prepend_search_path (BLUETOOTH_DIR);
-#endif
-
   /* evaluate the script */
   error = NULL;
   if (!gjs_context_eval (js_context, script, len,
