diff -u -r ccal-2.4.orig/ccal.cpp ccal-2.4/ccal.cpp
--- ccal-2.4.orig/ccal.cpp	2007-02-27 16:39:31.000000000 +0800
+++ ccal-2.4/ccal.cpp	2007-02-27 16:42:14.000000000 +0800
@@ -237,11 +237,12 @@
     else if (pmode == 2)
         Number2MonthPS(vmonth[moncnt], nstartlm, ndayslm, !bSingle, cmonname);
     /* January is special if lunar New Year is in February */
-    if (month == 1 && cmonth != 1)
+  /*  if (month == 1 && cmonth != 1)
     {
         int tiancnt0 = (cyear + 59) % 10;
         int dicnt0 = (cyear + 59) % 12;
-        if (vmoons[moncnt + 1] < jdnext) /* Two lunar months in one month */
+		printf("%s%s\n\n\n",(*CHtiangan)[tiancnt0], (*CHdizhi)[dicnt0]);
+        if (vmoons[moncnt + 1] < jdnext) 
         {
             short int cmonth1;
             char leap1[2] = {0x00, 0x00};
@@ -326,7 +327,6 @@
     else
     {
         if (moncnt < vmoons.size() - 1 && vmoons[moncnt + 1] < jdnext)
-        /* Two lunar months in one month */
         {
             short int cmonth1;
             char leap1[2] = {0x00, 0x00};
@@ -374,7 +374,6 @@
             }
         }
         else if (month == 2 && vmoons[moncnt] >= jdnext)
-        /* No new moon in February */
         {
             ndayslm = size_t(vmoons[moncnt] - vmoons[moncnt - 1]);
             if (pmode == 0 && nEncoding == 'a')
@@ -447,9 +446,9 @@
                     PSdizhi[dicnt], PSbigmchar[16], cmonname);
             }
         }
-    }
+    }*/
     int nmove, i;
-    if (pmode == 0)
+  /*  if (pmode == 0)
     {
         int nHeadLen = strlen(monthhead);
         if (nEncoding == 'u')
@@ -505,19 +504,19 @@
         printf("%% Month number\n%d lpts %d m gsave\n100 1 SF 1 0.9 1 K",
                ((month < 10) ? 35 : 10), -750);
         printf(" (%d) S grestore\n", month);
-    }
+    }*/
     /* Day of week */
     char dayshort[4];
-    if (pmode == 0)
+   /* if (pmode == 0)
     {
         for (i = 0; i < 7; i++)
         {
             if (nEncoding != 'u')
-                printf("%-10s", (*daynamesCH)[i]);
+               ;// printf("%-10s", (*daynamesCH)[i]);
             else
-                printf("%s   ", (*daynamesCH)[i]);
+                ;//printf("%s   ", (*daynamesCH)[i]);
         }
-        printf("\n");
+        //printf("\n");
     }
     else if (pmode == 1)
     {
@@ -568,7 +567,7 @@
             printf("%% Week heading\n0 0 m Ymh\n");
             printf("%% Days\n9 0 SF\n");
         }
-    }
+    }*/
     /* At most can be six weeks */
     int w;
     char cdayname[21];
@@ -619,7 +618,7 @@
                 if (i < dofw)
                 {
                     if (pmode == 0)
-                        printf("%10s", " ");
+                        ;//printf("%10s", " ");
                     else if (pmode == 1)
                     {
                         if (i == 0 || i == 6)
@@ -654,7 +653,7 @@
                 }
             }
             if (pmode == 0 || pmode == 1)
-                printf("%2d", dcnt);
+                ;/*printf("%2d", dcnt);*/
             else if (pmode == 3)
             {
                 printf("value=\"%d\" cmonth=\"%d\" leap=\"%s\" cdate=\"%d\" ", dcnt, cmonth, leap, ldcnt);
@@ -698,7 +697,7 @@
                 posy -= 7;
                 printf("%d %d moveto gsave ptc", posx, posy);
             }
-            if (jdcnt != vterms[termcnt] && jdcnt != vmoons[moncnt] && !sameday)
+            if (/*jdcnt != vterms[termcnt] &&*/ jdcnt != vmoons[moncnt] /*&& !sameday*/)
             {
                 if (pmode == 0)
                 {
@@ -706,8 +705,53 @@
                         printf(" [%2d]   ", ldcnt);
                     else
                     {
+					
                         Number2DayCH(ldcnt, nEncoding, cdayname);
-                        printf(" %s   ", cdayname);
+
+						//here cjacker added.
+					    if (moncnt > 0)
+                            Number2MonthCH(vmonth[moncnt - 1], 1, 30, nEncoding, cmonname);
+                        else
+                            Number2MonthCH(lastmon, 1, 30, nEncoding, cmonname);
+                        char *p = strstr(cmonname, (*CHmiscchar)[14]) + nCHchars;
+                        *p = 0;
+			int chinesemon;
+			if(moncnt >0)
+				chinesemon = vmonth[moncnt - 1];
+			else
+				chinesemon = lastmon;
+			
+			//printf("%d,%d  ",month,chinesemon);
+			if(chinesemon > month)
+    		{
+        		int tiancnt0 = (cyear + 59) % 10;
+        		int dicnt0 = (cyear + 59) % 12;
+        		printf("%s%s",(*CHtiangan)[tiancnt0], (*CHdizhi)[dicnt0]);
+			}
+			else
+				printf("%s%s",(*CHtiangan)[tiancnt], (*CHdizhi)[dicnt]);
+
+                        printf("  %s", cmonname);
+						//here
+						//这里输出中文的日期
+                        printf("%s", cdayname);
+						//如果是节气的话，还输出节气
+						if (jdcnt == vterms[termcnt])
+			            {
+            		    if (jdcnt == vmoons[moncnt])
+                    		sameday = true;
+                		if (pmode == 0)
+                		{
+                    		if (nEncoding == 'a')
+                        		printf(" [%s]   ", jieqi[termcnt++]);
+                    		else
+                    		{
+                        		printf("  [%s]", (*CHjieqi)[termcnt++]);
+                    		}
+                		}
+						}
+						//添加一个换行
+						printf("\n");
                     }
                 }
                 else if (pmode == 1)
@@ -810,6 +854,7 @@
                         printf(" [%s]   ", jieqi[termcnt++]);
                     else
                     {
+						//cjacker这里是原始节气的输出
                         printf(" %s   ", (*CHjieqi)[termcnt++]);
                     }
                 }
@@ -869,9 +914,29 @@
                         char *p = strstr(cmonname, (*CHmiscchar)[14]) + nCHchars;
                         *p = 0;
                         int nlen = strlen(cmonname);
-                        if (nlen <= 3 * nCHchars)
-                            printf(" ");
-                        printf("%s", cmonname);
+                       /* if (nlen <= 3 * nCHchars)
+                            printf(" ");*/
+						//每个月的初一，有点特殊
+						 int chinesemon;
+            if(moncnt >0)
+                chinesemon = vmonth[moncnt - 1];
+            else
+                chinesemon = lastmon;
+
+            //printf("%d,%d  ",month,chinesemon);
+            if(chinesemon > month)
+            {
+                int tiancnt0 = (cyear + 59) % 10;
+                int dicnt0 = (cyear + 59) % 12;
+                printf("%s%s",(*CHtiangan)[tiancnt0], (*CHdizhi)[dicnt0]);
+            }
+            else
+                printf("%s%s",(*CHtiangan)[tiancnt], (*CHdizhi)[dicnt]);
+
+                        printf("  %s", cmonname);
+                        //这里输出中文的日期
+						Number2DayCH(ldcnt, nEncoding, cdayname);
+                        printf("%s\n", cdayname);
                         if (nlen == 2 * nCHchars)
                             printf("   ");
                         if (nlen == 3 * nCHchars)
@@ -1070,6 +1135,7 @@
             PrintHeaderHTML(titlestr, month, year, nEncoding);
         else if (pmode == 2)
             PrintHeaderPS(titlestr, bIsSim, false);
+		//here do some print work;
         PrintMonth(year, month, vterms, lastnew, lastmon, vmoons, vmonth, nextnew, pmode, bSingle, nEncoding,
                    ((short int)(lmon) == month || (short int)(lmon + 0.9) == month));
     }
