diff -up ./src/input.cpp.iminput ./src/input.cpp
--- ./src/input.cpp.iminput	2009-03-14 12:07:59.000000000 +1000
+++ ./src/input.cpp	2009-03-23 13:52:04.000000000 +1000
@@ -183,30 +183,31 @@ void TtyInput::readyRead(s8 *buf, u32 le
 	if (len > start) PUT_KEYS(buf + start, len - start);
 }
 
-typedef enum {
-	ALT_L = 1 << 0, ALT_R = 1 << 1,
-	CTRL_L = 1 << 2, CTRL_R = 1 << 3,
-	SHIFT_L = 1 << 4, SHIFT_R = 1 << 5,
-} ModifierType;
-
-static u16 modState;
+static bool keyDown[NR_KEYS];
+static u32 downNum;
 
 void TtyInput::switchIm(bool enter, bool raw)
 {
-	modState = 0;
 	mImEnable = enter;
 	mRawMode = (enter && raw);
 
 	ioctl(STDIN_FILENO, KDSKBMODE, mRawMode ? K_MEDIUMRAW : K_UNICODE);
 	setupSysKey(mRawMode);
+
+	if (mRawMode) {
+		downNum = 0;
+		memset(keyDown, 0, sizeof(bool) * NR_KEYS);
+	}
 }
 
 void TtyInput::processRawKeys(s8 *buf, u32 len)
 {
+	u32 start = 0;
 	for (u32 i = 0; i < len; i++) {
 		bool down = !(buf[i] & 0x80);
 		u16 code = buf[i] & 0x7f;
-
+		u32 orig = i;
+		
 		if (!code) {
 			if (i + 2 >= len) break;
 
@@ -214,48 +215,29 @@ void TtyInput::processRawKeys(s8 *buf, u
 			code |= buf[++i] & 0x7f;
 			if (!(buf[i] & 0x80) || !(buf[i - 1] & 0x80)) continue;
 		}
+		if (code >= NR_KEYS) continue;
 
-		u16 mod = 0;
-		switch (code) {
-		case KEY_LEFTALT:
-			mod = ALT_L;
-			break;
-
-		case KEY_RIGHTALT:
-			mod = ALT_R;
-			break;
-
-		case KEY_LEFTCTRL:
-			mod = CTRL_L;
-			break;
-
-		case KEY_RIGHTCTRL:
-			mod = CTRL_R;
-			break;
-
-		case KEY_LEFTSHIFT:
-			mod = SHIFT_L;
-			break;
-
-		case KEY_RIGHTSHIFT:
-			mod = SHIFT_R;
-			break;
-
-		default:
-			break;
+		if (down ^ keyDown[code]) {
+			keyDown[code] = down;
+			
+			if (down) downNum++;
+			else downNum--;
+		} else if (!down) {
+			if (orig > start) ImProxy::instance()->sendKey(buf + start, orig - start);
+			start = i + 1;
 		}
 
-		if (mod) {
-			if (down) modState |= mod;
-			else modState &= ~mod;
-		} else if (down) {
-			u16 ctrl = (CTRL_L | CTRL_R);
-			if ((modState & ctrl) && !(modState & ~ctrl) && code == KEY_SPACE) {
-				FbTerm::instance()->processSysKey(CTRL_SPACE);
-				return;
-			}
+		if (down && code == KEY_SPACE && downNum == 2 && (keyDown[KEY_LEFTCTRL] || keyDown[KEY_RIGHTCTRL])) {
+			if (orig > start) ImProxy::instance()->sendKey(buf + start, orig - start);
+			
+			s8 ctrl = 0x80 | (keyDown[KEY_LEFTCTRL] ? KEY_LEFTCTRL : KEY_RIGHTCTRL);
+			ImProxy::instance()->sendKey(&ctrl, 1);
+ 
+			FbTerm::instance()->processSysKey(CTRL_SPACE);
+			return;
 		}
 	}
 
 	ImProxy::instance()->sendKey(buf, len);
+	if (len > start) ImProxy::instance()->sendKey(buf + start, len - start);	
 }
