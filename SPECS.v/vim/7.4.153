To: vim_dev@googlegroups.com
Subject: Patch 7.4.153
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.4.153
Problem:    Compiler warning for pointer type.
Solution:   Add type cast.
Files:	    src/if_py_both.h, src/if_python.c, src/if_python3.c


*** ../vim-7.4.152/src/if_py_both.h	2014-01-14 16:54:53.000000000 +0100
--- src/if_py_both.h	2014-01-14 18:54:47.000000000 +0100
***************
*** 2326,2332 ****
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx(idx, ListLength(self),
  				 &start, &stop, &step, &slicelen) < 0)
  	    return NULL;
  	return ListSlice(self, start, step, slicelen);
--- 2326,2332 ----
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx, ListLength(self),
  				 &start, &stop, &step, &slicelen) < 0)
  	    return NULL;
  	return ListSlice(self, start, step, slicelen);
***************
*** 2616,2622 ****
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx(idx, ListLength(self),
  				 &start, &stop, &step, &slicelen) < 0)
  	    return -1;
  	return ListAssSlice(self, start, step, slicelen,
--- 2616,2622 ----
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx, ListLength(self),
  				 &start, &stop, &step, &slicelen) < 0)
  	    return -1;
  	return ListAssSlice(self, start, step, slicelen,
*** ../vim-7.4.152/src/if_python.c	2014-01-14 16:36:40.000000000 +0100
--- src/if_python.c	2014-01-14 18:56:41.000000000 +0100
***************
*** 343,349 ****
  static PyInt(*dll_PyTuple_Size)(PyObject *);
  static PyObject*(*dll_PyTuple_GetItem)(PyObject *, PyInt);
  static PyTypeObject* dll_PyTuple_Type;
! static int (*dll_PySlice_GetIndicesEx)(PyObject *r, PyInt length,
  		     PyInt *start, PyInt *stop, PyInt *step,
  		     PyInt *slicelen);
  static PyObject*(*dll_PyImport_ImportModule)(const char *);
--- 343,349 ----
  static PyInt(*dll_PyTuple_Size)(PyObject *);
  static PyObject*(*dll_PyTuple_GetItem)(PyObject *, PyInt);
  static PyTypeObject* dll_PyTuple_Type;
! static int (*dll_PySlice_GetIndicesEx)(PySliceObject *r, PyInt length,
  		     PyInt *start, PyInt *stop, PyInt *step,
  		     PyInt *slicelen);
  static PyObject*(*dll_PyImport_ImportModule)(const char *);
*** ../vim-7.4.152/src/if_python3.c	2014-01-14 16:36:40.000000000 +0100
--- src/if_python3.c	2014-01-14 18:58:19.000000000 +0100
***************
*** 294,300 ****
  static PyObject* (*py3_PyTuple_GetItem)(PyObject *, Py_ssize_t);
  static int (*py3_PyMapping_Check)(PyObject *);
  static PyObject* (*py3_PyMapping_Keys)(PyObject *);
! static int (*py3_PySlice_GetIndicesEx)(PyObject *r, Py_ssize_t length,
  		     Py_ssize_t *start, Py_ssize_t *stop, Py_ssize_t *step,
  		     Py_ssize_t *slicelen);
  static PyObject* (*py3_PyErr_NoMemory)(void);
--- 294,300 ----
  static PyObject* (*py3_PyTuple_GetItem)(PyObject *, Py_ssize_t);
  static int (*py3_PyMapping_Check)(PyObject *);
  static PyObject* (*py3_PyMapping_Keys)(PyObject *);
! static int (*py3_PySlice_GetIndicesEx)(PySliceObject *r, Py_ssize_t length,
  		     Py_ssize_t *start, Py_ssize_t *stop, Py_ssize_t *step,
  		     Py_ssize_t *slicelen);
  static PyObject* (*py3_PyErr_NoMemory)(void);
***************
*** 1190,1196 ****
  	if (CheckBuffer((BufferObject *) self))
  	    return NULL;
  
! 	if (PySlice_GetIndicesEx((PyObject *)idx,
  	      (Py_ssize_t)((BufferObject *)(self))->buf->b_ml.ml_line_count,
  	      &start, &stop,
  	      &step, &slicelen) < 0)
--- 1190,1196 ----
  	if (CheckBuffer((BufferObject *) self))
  	    return NULL;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx,
  	      (Py_ssize_t)((BufferObject *)(self))->buf->b_ml.ml_line_count,
  	      &start, &stop,
  	      &step, &slicelen) < 0)
***************
*** 1222,1228 ****
  	if (CheckBuffer((BufferObject *) self))
  	    return -1;
  
! 	if (PySlice_GetIndicesEx((PyObject *)idx,
  	      (Py_ssize_t)((BufferObject *)(self))->buf->b_ml.ml_line_count,
  	      &start, &stop,
  	      &step, &slicelen) < 0)
--- 1222,1228 ----
  	if (CheckBuffer((BufferObject *) self))
  	    return -1;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx,
  	      (Py_ssize_t)((BufferObject *)(self))->buf->b_ml.ml_line_count,
  	      &start, &stop,
  	      &step, &slicelen) < 0)
***************
*** 1306,1312 ****
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PyObject *)idx,
  		((RangeObject *)(self))->end-((RangeObject *)(self))->start+1,
  		&start, &stop,
  		&step, &slicelen) < 0)
--- 1306,1312 ----
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx,
  		((RangeObject *)(self))->end-((RangeObject *)(self))->start+1,
  		&start, &stop,
  		&step, &slicelen) < 0)
***************
*** 1333,1339 ****
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PyObject *)idx,
  		((RangeObject *)(self))->end-((RangeObject *)(self))->start+1,
  		&start, &stop,
  		&step, &slicelen) < 0)
--- 1333,1339 ----
      {
  	Py_ssize_t start, stop, step, slicelen;
  
! 	if (PySlice_GetIndicesEx((PySliceObject *)idx,
  		((RangeObject *)(self))->end-((RangeObject *)(self))->start+1,
  		&start, &stop,
  		&step, &slicelen) < 0)
*** ../vim-7.4.152/src/version.c	2014-01-14 16:54:53.000000000 +0100
--- src/version.c	2014-01-14 18:54:01.000000000 +0100
***************
*** 740,741 ****
--- 740,743 ----
  {   /* Add new patch number below this line */
+ /**/
+     153,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
161. You get up before the sun rises to check your e-mail, and you
     find yourself in the very same chair long after the sun has set.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
